[{"/Users/jswenson/Desktop/todo/src/reportWebVitals.js":"1","/Users/jswenson/Desktop/todo/src/services/firebase.js":"2","/Users/jswenson/Desktop/todo/src/App.js":"3","/Users/jswenson/Desktop/todo/src/contexts/Task.js":"4","/Users/jswenson/Desktop/todo/src/components/TaskList.jsx":"5","/Users/jswenson/Desktop/todo/src/index.js":"6"},{"size":362,"mtime":1610730949080,"results":"7","hashOfConfig":"8"},{"size":967,"mtime":1614630547531,"results":"9","hashOfConfig":"8"},{"size":482,"mtime":1610753740711,"results":"10","hashOfConfig":"8"},{"size":874,"mtime":1614631283181,"results":"11","hashOfConfig":"8"},{"size":2003,"mtime":1614631050716,"results":"12","hashOfConfig":"8"},{"size":589,"mtime":1610731456608,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"xf92u3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/jswenson/Desktop/todo/src/reportWebVitals.js",[],["29","30"],"/Users/jswenson/Desktop/todo/src/services/firebase.js",[],"/Users/jswenson/Desktop/todo/src/App.js",["31","32"],"import React, {useEffect, useContext} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport TaskContext from './contexts/Task'\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  const { getTasks } = useContext(TaskContext);\n  \n  useEffect(() => {\n    getTasks();\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h3>My Tasks</h3>\n        <TaskList />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jswenson/Desktop/todo/src/contexts/Task.js",["33"],"/Users/jswenson/Desktop/todo/src/components/TaskList.jsx",["34","35","36"],"import React, { useState, useContext } from 'react'\nimport TaskContext from '../contexts/Task'\n\nfunction TaskList() {\n  const [newTask, setNewTask] = useState(false);\n  const [task, setTask] = useState({category: '', name: '', completed: false})\n  const { tasks, addTask, updateTask } = useContext(TaskContext);\n\n  const updateCompleted = task => {\n    task.task.completed = !task.task.completed;\n    updateTask(task);\n  };\n\n  const saveTask = () => {\n    addTask(task).then(() => cancelTask(/*complete the cancel task todo*/))\n  };\n\n  const cancelTask = () => {\n    //todo reset the task state and hide the form\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    //todo update the task state with these variables\n  };\n\n  return (\n    <div className=\"TaskList\">\n      <button onClick={() => setNewTask(!newTask)}>+</button>\n      <table>\n      <thead>\n        <tr>\n          <th>Category</th>\n          <th>Name</th>\n          <th>Completed</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          newTask && (\n            <tr>\n              <td>\n                <input type=\"text\" value={task.category} onChange={handleChange} name=\"category\"/>\n              </td>\n              <td>\n                <input type=\"text\" value={task.name} onChange={handleChange} name=\"name\"/>\n              </td>\n              <td>\n                <button disabled={task.name.length === 0 || task.category.length === 0 ? true : false} onClick={saveTask}>save</button> <br/>\n                <button onClick={cancelTask}>cancel</button>\n              </td>\n            </tr>\n          )\n        }\n        {\n          tasks.map(task => (\n            <tr key={task.id}>\n              <td>{task.task.category}</td>\n              <td>{task.task.name}</td>\n              <td><input type=\"checkbox\" checked={task.task.completed} onChange={() => updateCompleted(task)}/></td>\n            </tr>\n          ))\n        }\n      </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TaskList;\n","/Users/jswenson/Desktop/todo/src/index.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":12},{"ruleId":"45","severity":1,"message":"46","line":12,"column":5,"nodeType":"47","endLine":12,"endColumn":7,"suggestions":"48"},{"ruleId":"41","severity":1,"message":"49","line":2,"column":46,"nodeType":"43","messageId":"44","endLine":2,"endColumn":56},{"ruleId":"41","severity":1,"message":"50","line":6,"column":16,"nodeType":"43","messageId":"44","endLine":6,"endColumn":23},{"ruleId":"41","severity":1,"message":"51","line":23,"column":13,"nodeType":"43","messageId":"44","endLine":23,"endColumn":17},{"ruleId":"41","severity":1,"message":"52","line":23,"column":19,"nodeType":"43","messageId":"44","endLine":23,"endColumn":24},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTasks'. Either include it or remove the dependency array.","ArrayExpression",["55"],"'fbSnapshot' is defined but never used.","'setTask' is assigned a value but never used.","'name' is assigned a value but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [getTasks]",{"range":"58","text":"59"},[299,301],"[getTasks]"]